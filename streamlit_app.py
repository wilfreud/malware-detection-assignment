import streamlit as st
import pickle
import numpy as np

# Chargement du modèle entraîné
with open('best_model_for_malware.pkl', 'rb') as f:
    model = pickle.load(f)

# Interface utilisateur avec Streamlit
st.title('Détection de Malware')

# Widget pour saisir les caractéristiques
address_entry_point = st.number_input('AddressOfEntryPoint', min_value=0, value=0)
linker_version = st.number_input('MajorLinkerVersion', min_value=0, value=0)
image_version = st.number_input('MajorImageVersion', min_value=0, value=0)
os_version = st.number_input('MajorOperatingSystemVersion', min_value=0, value=0)
dll_characteristics = st.number_input('DllCharacteristics', min_value=0, value=0)
stack_reserve = st.number_input('SizeOfStackReserve', min_value=0, value=0)
num_sections = st.number_input('NumberOfSections', min_value=0, value=0)
resource_size = st.number_input('ResourceSize', min_value=0, value=0)

# Bouton pour déclencher la prédiction
if st.button('Predict'):
    # Préparer les caractéristiques pour la prédiction
    features = np.array([[address_entry_point, linker_version, image_version, os_version, 
                           dll_characteristics, stack_reserve, num_sections, resource_size]])

    # Faire la prédiction en utilisant le modèle chargé
    prediction = model.predict(features)
    
    # Affichage du résultat de la prédiction
    if prediction == 1:
        st.write('Le fichier est prédit comme légitime.')
    else:
        st.write('Le fichier est prédit comme malware.')
