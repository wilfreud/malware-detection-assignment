import streamlit as st
from joblib import load
import numpy as np
import pandas as pd

# Load the trained model
model = load('best_model_for_malware.joblib')

# Define feature names
feature_names = ['AddressOfEntryPoint', 'MajorLinkerVersion', 'MajorImageVersion',
                 'MajorOperatingSystemVersion', 'DllCharacteristics',
                 'SizeOfStackReserve', 'NumberOfSections', 'ResourceSize',]

# User interface with Streamlit
st.title('Malware Detection')

# Collect feature inputs from the user
inputs = {}
for feature in feature_names:
    inputs[feature] = st.number_input(f'Enter {feature}', min_value=0, value=0)


# Button to trigger prediction
if st.button('Predict'):
    # Prepare inputs for prediction
    input_data = np.array([inputs[feature] for feature in feature_names]).reshape(1, -1)
    df = pd.DataFrame(input_data, columns=feature_names)


    # Make prediction using the loaded model
    prediction = model.predict(df)
    print("prediction:: ", prediction)

    # Display prediction result
    if prediction == 1:
        st.write('The file is a malware.')
    else:
        st.write('The file is benigne (not a malware).')
